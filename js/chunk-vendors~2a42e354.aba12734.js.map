{"version":3,"sources":["webpack:///./node_modules/asn1.js/lib/asn1/constants/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/asn1.js/lib/asn1/decoders/index.js","webpack:///./node_modules/asn1.js/lib/asn1/encoders/index.js","webpack:///./node_modules/asn1.js/lib/asn1/encoders/der.js","webpack:///./node_modules/bn.js/lib/bn.js","webpack:///./node_modules/asn1.js/lib/asn1/base/index.js","webpack:///./node_modules/asn1.js/lib/asn1/base/buffer.js","webpack:///./node_modules/asn1.js/lib/asn1.js","webpack:///./node_modules/asn1.js/lib/asn1/base/node.js","webpack:///./node_modules/asn1.js/lib/asn1/encoders/pem.js","webpack:///./node_modules/asn1.js/lib/asn1/constants/der.js","webpack:///./node_modules/asn1.js/lib/asn1/decoders/pem.js","webpack:///./node_modules/bignumber.js/bignumber.js","webpack:///./node_modules/arrify/index.js","webpack:///./node_modules/asn1.js/lib/asn1/decoders/der.js","webpack:///./node_modules/asn1.js/lib/asn1/base/reporter.js","webpack:///./node_modules/asn1.js/lib/asn1/api.js","webpack:///./node_modules/assert/assert.js"],"names":["constants","exports","_reverse","map","res","Object","keys","forEach","key","value","der","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2","decoders","pem","encoders","inherits","Buffer","Node","DEREncoder","entity","this","enc","name","tree","DERNode","_init","body","parent","call","two","encodeTag","tag","primitive","cls","reporter","tagByName","hasOwnProperty","error","tagClassByName","module","prototype","encode","data","_encode","_encodeComposite","content","encodedTag","header","alloc","_createEncoderBuffer","lenOctets","j","_encodeStr","str","unused","buf","writeUInt16BE","_isNumstr","_isPrintstr","test","_encodeObjid","id","values","relative","split","isArray","slice","JSON","stringify","splice","size","ident","objid","offset","_encodeTime","time","date","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","_encodeNull","_encodeInt","isBuffer","numArray","toArray","sign","unshift","from","out","copy","_encodeBool","_use","obj","_getEncoder","_skipDefault","dataBuffer","state","_baseState","undefined","defaultBuffer","_encodeValue","assert","val","msg","ctor","superCtor","super_","TempCtor","constructor","BN","number","base","endian","isBN","negative","words","red","wordSize","window","e","parseHex4Bits","string","index","c","parseHexByte","lowerBound","r","parseBase","mul","Math","min","max","left","right","cmp","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","ceil","w","off","strip","parseLength","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","dest","clone","_expand","_normSign","inspect","zeros","groupSizes","groupBases","toBitArray","bitLength","bit","wbit","smallMulTo","self","a","b","lo","carry","k","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","reqLength","littleEndian","q","andln","iushrn","clz32","_countBits","t","_zeroBits","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","fftm","FFTM","mulp","x","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","_strip","input","outLen","prev","next","mod3","one","nOne","lpow","z","inv","windowSize","wnd","current","currentLen","mont","u","Reporter","DecoderBuffer","EncoderBuffer","options","item","isEncoderBuffer","isDecoderBuffer","isCompatible","save","restore","isEmpty","readUInt8","skip","raw","fail","bytes","_reporterState","write","asn1","bignum","define","tags","methods","concat","overrided","children","args","reverseArgs","choice","optional","any","use","useDecoder","explicit","implicit","contains","_wrap","stateProps","cstate","prop","method","apply","arguments","filter","child","equal","_useArgs","arg","def","newKey","_decode","wrapResult","prevObj","result","present","prevKey","enterKey","_peekTag","isError","_decodeGeneric","_decodeChoice","enterObject","_decodeTag","track","path","_getUse","leaveObject","exitKey","leaveKey","_decodeList","_decodeStr","_decodeObjid","_decodeTime","_decodeNull","_decodeBool","_decodeInt","match","some","node","type","_encodeChoice","_encodePrimitive","PEMEncoder","label","reverse","tagClass","0","1","2","3","DERDecoder","PEMDecoder","decode","lines","toUpperCase","base64","globalObject","BigNumber","isNumeric","mathceil","mathfloor","floor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","configObject","convertBase","parseNumeric","P","valueOf","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","prefix","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","alphabetHasNormalDecimalDigits","v","alphabet","caseChanged","isNum","_isBigNumber","String","search","substring","intCheck","DEBUG","charAt","toLowerCase","format","rm","c0","ne","coeffToString","toExponential","toFixedPoint","maxOrMin","normalise","pop","sd","d","ni","rd","xc","pows10","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","set","crypto","getRandomValues","randomBytes","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","minimum","random","pow2_53","random53bitInt","dp","rand","Uint32Array","sum","plus","decimal","toBaseOut","baseIn","baseOut","arrL","callerIsToString","multiply","temp","xlo","xhi","klo","khi","compare","aL","bL","subtract","more","prod","prodL","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","yc","NaN","bitFloor","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","isNaN","p1","p2","absoluteValue","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","isModExp","nIsBig","nIsNeg","nIsOdd","isInteger","times","integerValue","isEqualTo","isFinite","isGreaterThan","isGreaterThanOrEqualTo","isLessThan","isLessThanOrEqualTo","isNegative","isPositive","minus","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","rep","toFixed","toFormat","g1","g2","intPart","fractionPart","intDigits","substr","RegExp","toFraction","md","d0","d1","d2","exp","n0","n1","toPrecision","zs","arrify","Symbol","iterator","derDecodeTag","oct","tagStr","derDecodeLen","buffer","decodedTag","_skipUntilEnd","decoder","possibleEnd","fromCharCode","readUInt16BE","numstr","printstr","identifiers","subident","first","second","year","mon","day","hour","sec","UTC","_getDecoder","errors","ReporterError","rethrow","pathLen","now","err","inherited","elem","message","stack","partial","captureStackTrace","api","Entity","_createNamed","Base","Generated","_initNamed","objectAssign","global","_isBuffer","util","hasOwn","pSlice","functionsHaveNames","pToString","isView","arrbuf","ArrayBuffer","DataView","ok","regex","getName","func","isFunction","truncate","something","rawname","getMessage","actual","operator","expected","stackStartFunction","AssertionError","_deepEqual","strict","memos","isDate","getTime","isRegExp","source","multiline","lastIndex","ignoreCase","Float32Array","Float64Array","actualIndex","objEquiv","isArguments","object","actualVisitedObjects","isPrimitive","getPrototypeOf","aIsArgs","bIsArgs","ka","objectKeys","kb","sort","notDeepStrictEqual","expectedException","isPrototypeOf","_tryBlock","block","_throws","shouldThrow","TypeError","userProvidedMessage","isUnwantedException","isUnexpectedException","generatedMessage","fn_name","idx","next_line","notEqual","deepEqual","deepStrictEqual","notDeepEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError"],"mappings":"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","file":"js/chunk-vendors~2a42e354.aba12734.js","sourcesContent":["'use strict';\n\nconst constants = exports;\n\n// Helper\nconstants._reverse = function reverse(map) {\n  const res = {};\n\n  Object.keys(map).forEach(function(key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key)\n      key = key | 0;\n\n    const value = map[key];\n    res[value] = key;\n  });\n\n  return res;\n};\n\nconstants.der = require('./der');\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","'use strict';\n\nconst decoders = exports;\n\ndecoders.der = require('./der');\ndecoders.pem = require('./pem');\n","'use strict';\n\nconst encoders = exports;\n\nencoders.der = require('./der');\nencoders.pem = require('./pem');\n","'use strict';\n\nconst inherits = require('inherits');\nconst Buffer = require('safer-buffer').Buffer;\nconst Node = require('../base/node');\n\n// Import DER constants\nconst der = require('../constants/der');\n\nfunction DEREncoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n}\nmodule.exports = DEREncoder;\n\nDEREncoder.prototype.encode = function encode(data, reporter) {\n  return this.tree._encode(data, reporter).join();\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  Node.call(this, 'der', parent);\n}\ninherits(DERNode, Node);\n\nDERNode.prototype._encodeComposite = function encodeComposite(tag,\n  primitive,\n  cls,\n  content) {\n  const encodedTag = encodeTag(tag, primitive, cls, this.reporter);\n\n  // Short form\n  if (content.length < 0x80) {\n    const header = Buffer.alloc(2);\n    header[0] = encodedTag;\n    header[1] = content.length;\n    return this._createEncoderBuffer([ header, content ]);\n  }\n\n  // Long form\n  // Count octets required to store length\n  let lenOctets = 1;\n  for (let i = content.length; i >= 0x100; i >>= 8)\n    lenOctets++;\n\n  const header = Buffer.alloc(1 + 1 + lenOctets);\n  header[0] = encodedTag;\n  header[1] = 0x80 | lenOctets;\n\n  for (let i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)\n    header[i] = j & 0xff;\n\n  return this._createEncoderBuffer([ header, content ]);\n};\n\nDERNode.prototype._encodeStr = function encodeStr(str, tag) {\n  if (tag === 'bitstr') {\n    return this._createEncoderBuffer([ str.unused | 0, str.data ]);\n  } else if (tag === 'bmpstr') {\n    const buf = Buffer.alloc(str.length * 2);\n    for (let i = 0; i < str.length; i++) {\n      buf.writeUInt16BE(str.charCodeAt(i), i * 2);\n    }\n    return this._createEncoderBuffer(buf);\n  } else if (tag === 'numstr') {\n    if (!this._isNumstr(str)) {\n      return this.reporter.error('Encoding of string type: numstr supports ' +\n                                 'only digits and space');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'printstr') {\n    if (!this._isPrintstr(str)) {\n      return this.reporter.error('Encoding of string type: printstr supports ' +\n                                 'only latin upper and lower case letters, ' +\n                                 'digits, space, apostrophe, left and rigth ' +\n                                 'parenthesis, plus sign, comma, hyphen, ' +\n                                 'dot, slash, colon, equal sign, ' +\n                                 'question mark');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (/str$/.test(tag)) {\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'objDesc') {\n    return this._createEncoderBuffer(str);\n  } else {\n    return this.reporter.error('Encoding of string type: ' + tag +\n                               ' unsupported');\n  }\n};\n\nDERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {\n  if (typeof id === 'string') {\n    if (!values)\n      return this.reporter.error('string objid given, but no values map found');\n    if (!values.hasOwnProperty(id))\n      return this.reporter.error('objid not found in values map');\n    id = values[id].split(/[\\s.]+/g);\n    for (let i = 0; i < id.length; i++)\n      id[i] |= 0;\n  } else if (Array.isArray(id)) {\n    id = id.slice();\n    for (let i = 0; i < id.length; i++)\n      id[i] |= 0;\n  }\n\n  if (!Array.isArray(id)) {\n    return this.reporter.error('objid() should be either array or string, ' +\n                               'got: ' + JSON.stringify(id));\n  }\n\n  if (!relative) {\n    if (id[1] >= 40)\n      return this.reporter.error('Second objid identifier OOB');\n    id.splice(0, 2, id[0] * 40 + id[1]);\n  }\n\n  // Count number of octets\n  let size = 0;\n  for (let i = 0; i < id.length; i++) {\n    let ident = id[i];\n    for (size++; ident >= 0x80; ident >>= 7)\n      size++;\n  }\n\n  const objid = Buffer.alloc(size);\n  let offset = objid.length - 1;\n  for (let i = id.length - 1; i >= 0; i--) {\n    let ident = id[i];\n    objid[offset--] = ident & 0x7f;\n    while ((ident >>= 7) > 0)\n      objid[offset--] = 0x80 | (ident & 0x7f);\n  }\n\n  return this._createEncoderBuffer(objid);\n};\n\nfunction two(num) {\n  if (num < 10)\n    return '0' + num;\n  else\n    return num;\n}\n\nDERNode.prototype._encodeTime = function encodeTime(time, tag) {\n  let str;\n  const date = new Date(time);\n\n  if (tag === 'gentime') {\n    str = [\n      two(date.getUTCFullYear()),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else if (tag === 'utctime') {\n    str = [\n      two(date.getUTCFullYear() % 100),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else {\n    this.reporter.error('Encoding ' + tag + ' time is not supported yet');\n  }\n\n  return this._encodeStr(str, 'octstr');\n};\n\nDERNode.prototype._encodeNull = function encodeNull() {\n  return this._createEncoderBuffer('');\n};\n\nDERNode.prototype._encodeInt = function encodeInt(num, values) {\n  if (typeof num === 'string') {\n    if (!values)\n      return this.reporter.error('String int or enum given, but no values map');\n    if (!values.hasOwnProperty(num)) {\n      return this.reporter.error('Values map doesn\\'t contain: ' +\n                                 JSON.stringify(num));\n    }\n    num = values[num];\n  }\n\n  // Bignum, assume big endian\n  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {\n    const numArray = num.toArray();\n    if (!num.sign && numArray[0] & 0x80) {\n      numArray.unshift(0);\n    }\n    num = Buffer.from(numArray);\n  }\n\n  if (Buffer.isBuffer(num)) {\n    let size = num.length;\n    if (num.length === 0)\n      size++;\n\n    const out = Buffer.alloc(size);\n    num.copy(out);\n    if (num.length === 0)\n      out[0] = 0;\n    return this._createEncoderBuffer(out);\n  }\n\n  if (num < 0x80)\n    return this._createEncoderBuffer(num);\n\n  if (num < 0x100)\n    return this._createEncoderBuffer([0, num]);\n\n  let size = 1;\n  for (let i = num; i >= 0x100; i >>= 8)\n    size++;\n\n  const out = new Array(size);\n  for (let i = out.length - 1; i >= 0; i--) {\n    out[i] = num & 0xff;\n    num >>= 8;\n  }\n  if(out[0] & 0x80) {\n    out.unshift(0);\n  }\n\n  return this._createEncoderBuffer(Buffer.from(out));\n};\n\nDERNode.prototype._encodeBool = function encodeBool(value) {\n  return this._createEncoderBuffer(value ? 0xff : 0);\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getEncoder('der').tree;\n};\n\nDERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {\n  const state = this._baseState;\n  let i;\n  if (state['default'] === null)\n    return false;\n\n  const data = dataBuffer.join();\n  if (state.defaultBuffer === undefined)\n    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();\n\n  if (data.length !== state.defaultBuffer.length)\n    return false;\n\n  for (i=0; i < data.length; i++)\n    if (data[i] !== state.defaultBuffer[i])\n      return false;\n\n  return true;\n};\n\n// Utility methods\n\nfunction encodeTag(tag, primitive, cls, reporter) {\n  let res;\n\n  if (tag === 'seqof')\n    tag = 'seq';\n  else if (tag === 'setof')\n    tag = 'set';\n\n  if (der.tagByName.hasOwnProperty(tag))\n    res = der.tagByName[tag];\n  else if (typeof tag === 'number' && (tag | 0) === tag)\n    res = tag;\n  else\n    return reporter.error('Unknown tag: ' + tag);\n\n  if (res >= 0x1f)\n    return reporter.error('Multi-octet tag encoding unsupported');\n\n  if (!primitive)\n    res |= 0x20;\n\n  res |= (der.tagClassByName[cls || 'universal'] << 6);\n\n  return res;\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict';\n\nconst base = exports;\n\nbase.Reporter = require('./reporter').Reporter;\nbase.DecoderBuffer = require('./buffer').DecoderBuffer;\nbase.EncoderBuffer = require('./buffer').EncoderBuffer;\nbase.Node = require('./node');\n","'use strict';\n\nconst inherits = require('inherits');\nconst Reporter = require('../base/reporter').Reporter;\nconst Buffer = require('safer-buffer').Buffer;\n\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\n\nDecoderBuffer.isDecoderBuffer = function isDecoderBuffer(data) {\n  if (data instanceof DecoderBuffer) {\n    return true;\n  }\n\n  // Or accept compatible API\n  const isCompatible = typeof data === 'object' &&\n    Buffer.isBuffer(data.base) &&\n    data.constructor.name === 'DecoderBuffer' &&\n    typeof data.offset === 'number' &&\n    typeof data.length === 'number' &&\n    typeof data.save === 'function' &&\n    typeof data.restore === 'function' &&\n    typeof data.isEmpty === 'function' &&\n    typeof data.readUInt8 === 'function' &&\n    typeof data.skip === 'function' &&\n    typeof data.raw === 'function';\n\n  return isCompatible;\n};\n\nDecoderBuffer.prototype.save = function save() {\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };\n};\n\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  const res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n\n  return res;\n};\n\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length)\n    return this.base.readUInt8(this.offset++, true);\n  else\n    return this.error(fail || 'DecoderBuffer overrun');\n};\n\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length))\n    return this.error(fail || 'DecoderBuffer overrun');\n\n  const res = new DecoderBuffer(this.base);\n\n  // Share reporter state\n  res._reporterState = this._reporterState;\n\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n};\n\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n};\n\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function(item) {\n      if (!EncoderBuffer.isEncoderBuffer(item))\n        item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff))\n      return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\nexports.EncoderBuffer = EncoderBuffer;\n\nEncoderBuffer.isEncoderBuffer = function isEncoderBuffer(data) {\n  if (data instanceof EncoderBuffer) {\n    return true;\n  }\n\n  // Or accept compatible API\n  const isCompatible = typeof data === 'object' &&\n    data.constructor.name === 'EncoderBuffer' &&\n    typeof data.length === 'number' &&\n    typeof data.join === 'function';\n\n  return isCompatible;\n};\n\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out)\n    out = Buffer.alloc(this.length);\n  if (!offset)\n    offset = 0;\n\n  if (this.length === 0)\n    return out;\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function(item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number')\n      out[offset] = this.value;\n    else if (typeof this.value === 'string')\n      out.write(this.value, offset);\n    else if (Buffer.isBuffer(this.value))\n      this.value.copy(out, offset);\n    offset += this.length;\n  }\n\n  return out;\n};\n","'use strict';\n\nconst asn1 = exports;\n\nasn1.bignum = require('bn.js');\n\nasn1.define = require('./asn1/api').define;\nasn1.base = require('./asn1/base');\nasn1.constants = require('./asn1/constants');\nasn1.decoders = require('./asn1/decoders');\nasn1.encoders = require('./asn1/encoders');\n","'use strict';\n\nconst Reporter = require('../base/reporter').Reporter;\nconst EncoderBuffer = require('../base/buffer').EncoderBuffer;\nconst DecoderBuffer = require('../base/buffer').DecoderBuffer;\nconst assert = require('minimalistic-assert');\n\n// Supported tags\nconst tags = [\n  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',\n  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',\n  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',\n  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'\n];\n\n// Public methods list\nconst methods = [\n  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',\n  'any', 'contains'\n].concat(tags);\n\n// Overrided methods list\nconst overrided = [\n  '_peekTag', '_decodeTag', '_use',\n  '_decodeStr', '_decodeObjid', '_decodeTime',\n  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',\n\n  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',\n  '_encodeNull', '_encodeInt', '_encodeBool'\n];\n\nfunction Node(enc, parent, name) {\n  const state = {};\n  this._baseState = state;\n\n  state.name = name;\n  state.enc = enc;\n\n  state.parent = parent || null;\n  state.children = null;\n\n  // State\n  state.tag = null;\n  state.args = null;\n  state.reverseArgs = null;\n  state.choice = null;\n  state.optional = false;\n  state.any = false;\n  state.obj = false;\n  state.use = null;\n  state.useDecoder = null;\n  state.key = null;\n  state['default'] = null;\n  state.explicit = null;\n  state.implicit = null;\n  state.contains = null;\n\n  // Should create new instance on each method\n  if (!state.parent) {\n    state.children = [];\n    this._wrap();\n  }\n}\nmodule.exports = Node;\n\nconst stateProps = [\n  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',\n  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',\n  'implicit', 'contains'\n];\n\nNode.prototype.clone = function clone() {\n  const state = this._baseState;\n  const cstate = {};\n  stateProps.forEach(function(prop) {\n    cstate[prop] = state[prop];\n  });\n  const res = new this.constructor(cstate.parent);\n  res._baseState = cstate;\n  return res;\n};\n\nNode.prototype._wrap = function wrap() {\n  const state = this._baseState;\n  methods.forEach(function(method) {\n    this[method] = function _wrappedMethod() {\n      const clone = new this.constructor(this);\n      state.children.push(clone);\n      return clone[method].apply(clone, arguments);\n    };\n  }, this);\n};\n\nNode.prototype._init = function init(body) {\n  const state = this._baseState;\n\n  assert(state.parent === null);\n  body.call(this);\n\n  // Filter children\n  state.children = state.children.filter(function(child) {\n    return child._baseState.parent === this;\n  }, this);\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\n};\n\nNode.prototype._useArgs = function useArgs(args) {\n  const state = this._baseState;\n\n  // Filter children and args\n  const children = args.filter(function(arg) {\n    return arg instanceof this.constructor;\n  }, this);\n  args = args.filter(function(arg) {\n    return !(arg instanceof this.constructor);\n  }, this);\n\n  if (children.length !== 0) {\n    assert(state.children === null);\n    state.children = children;\n\n    // Replace parent to maintain backward link\n    children.forEach(function(child) {\n      child._baseState.parent = this;\n    }, this);\n  }\n  if (args.length !== 0) {\n    assert(state.args === null);\n    state.args = args;\n    state.reverseArgs = args.map(function(arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object)\n        return arg;\n\n      const res = {};\n      Object.keys(arg).forEach(function(key) {\n        if (key == (key | 0))\n          key |= 0;\n        const value = arg[key];\n        res[value] = key;\n      });\n      return res;\n    });\n  }\n};\n\n//\n// Overrided methods\n//\n\noverrided.forEach(function(method) {\n  Node.prototype[method] = function _overrided() {\n    const state = this._baseState;\n    throw new Error(method + ' not implemented for encoding: ' + state.enc);\n  };\n});\n\n//\n// Public methods\n//\n\ntags.forEach(function(tag) {\n  Node.prototype[tag] = function _tagMethod() {\n    const state = this._baseState;\n    const args = Array.prototype.slice.call(arguments);\n\n    assert(state.tag === null);\n    state.tag = tag;\n\n    this._useArgs(args);\n\n    return this;\n  };\n});\n\nNode.prototype.use = function use(item) {\n  assert(item);\n  const state = this._baseState;\n\n  assert(state.use === null);\n  state.use = item;\n\n  return this;\n};\n\nNode.prototype.optional = function optional() {\n  const state = this._baseState;\n\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.def = function def(val) {\n  const state = this._baseState;\n\n  assert(state['default'] === null);\n  state['default'] = val;\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.explicit = function explicit(num) {\n  const state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.explicit = num;\n\n  return this;\n};\n\nNode.prototype.implicit = function implicit(num) {\n  const state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.implicit = num;\n\n  return this;\n};\n\nNode.prototype.obj = function obj() {\n  const state = this._baseState;\n  const args = Array.prototype.slice.call(arguments);\n\n  state.obj = true;\n\n  if (args.length !== 0)\n    this._useArgs(args);\n\n  return this;\n};\n\nNode.prototype.key = function key(newKey) {\n  const state = this._baseState;\n\n  assert(state.key === null);\n  state.key = newKey;\n\n  return this;\n};\n\nNode.prototype.any = function any() {\n  const state = this._baseState;\n\n  state.any = true;\n\n  return this;\n};\n\nNode.prototype.choice = function choice(obj) {\n  const state = this._baseState;\n\n  assert(state.choice === null);\n  state.choice = obj;\n  this._useArgs(Object.keys(obj).map(function(key) {\n    return obj[key];\n  }));\n\n  return this;\n};\n\nNode.prototype.contains = function contains(item) {\n  const state = this._baseState;\n\n  assert(state.use === null);\n  state.contains = item;\n\n  return this;\n};\n\n//\n// Decoding\n//\n\nNode.prototype._decode = function decode(input, options) {\n  const state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return input.wrapResult(state.children[0]._decode(input, options));\n\n  let result = state['default'];\n  let present = true;\n\n  let prevKey = null;\n  if (state.key !== null)\n    prevKey = input.enterKey(state.key);\n\n  // Check if tag is there\n  if (state.optional) {\n    let tag = null;\n    if (state.explicit !== null)\n      tag = state.explicit;\n    else if (state.implicit !== null)\n      tag = state.implicit;\n    else if (state.tag !== null)\n      tag = state.tag;\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      const save = input.save();\n      try {\n        if (state.choice === null)\n          this._decodeGeneric(state.tag, input, options);\n        else\n          this._decodeChoice(input, options);\n        present = true;\n      } catch (e) {\n        present = false;\n      }\n      input.restore(save);\n    } else {\n      present = this._peekTag(input, tag, state.any);\n\n      if (input.isError(present))\n        return present;\n    }\n  }\n\n  // Push object on stack\n  let prevObj;\n  if (state.obj && present)\n    prevObj = input.enterObject();\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      const explicit = this._decodeTag(input, state.explicit);\n      if (input.isError(explicit))\n        return explicit;\n      input = explicit;\n    }\n\n    const start = input.offset;\n\n    // Unwrap implicit and normal values\n    if (state.use === null && state.choice === null) {\n      let save;\n      if (state.any)\n        save = input.save();\n      const body = this._decodeTag(\n        input,\n        state.implicit !== null ? state.implicit : state.tag,\n        state.any\n      );\n      if (input.isError(body))\n        return body;\n\n      if (state.any)\n        result = input.raw(save);\n      else\n        input = body;\n    }\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), start, input.length, 'tagged');\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), input.offset, input.length, 'content');\n\n    // Select proper method for tag\n    if (state.any) {\n      // no-op\n    } else if (state.choice === null) {\n      result = this._decodeGeneric(state.tag, input, options);\n    } else {\n      result = this._decodeChoice(input, options);\n    }\n\n    if (input.isError(result))\n      return result;\n\n    // Decode children\n    if (!state.any && state.choice === null && state.children !== null) {\n      state.children.forEach(function decodeChildren(child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input, options);\n      });\n    }\n\n    // Decode contained/encoded by schema, only in bit or octet strings\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n      const data = new DecoderBuffer(result);\n      result = this._getUse(state.contains, input._reporterState.obj)\n        ._decode(data, options);\n    }\n  }\n\n  // Pop object\n  if (state.obj && present)\n    result = input.leaveObject(prevObj);\n\n  // Set key\n  if (state.key !== null && (result !== null || present === true))\n    input.leaveKey(prevKey, state.key, result);\n  else if (prevKey !== null)\n    input.exitKey(prevKey);\n\n  return result;\n};\n\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {\n  const state = this._baseState;\n\n  if (tag === 'seq' || tag === 'set')\n    return null;\n  if (tag === 'seqof' || tag === 'setof')\n    return this._decodeList(input, tag, state.args[0], options);\n  else if (/str$/.test(tag))\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'objid' && state.args)\n    return this._decodeObjid(input, state.args[0], state.args[1], options);\n  else if (tag === 'objid')\n    return this._decodeObjid(input, null, null, options);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._decodeTime(input, tag, options);\n  else if (tag === 'null_')\n    return this._decodeNull(input, options);\n  else if (tag === 'bool')\n    return this._decodeBool(input, options);\n  else if (tag === 'objDesc')\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'int' || tag === 'enum')\n    return this._decodeInt(input, state.args && state.args[0], options);\n\n  if (state.use !== null) {\n    return this._getUse(state.use, input._reporterState.obj)\n      ._decode(input, options);\n  } else {\n    return input.error('unknown tag: ' + tag);\n  }\n};\n\nNode.prototype._getUse = function _getUse(entity, obj) {\n\n  const state = this._baseState;\n  // Create altered use decoder if implicit is set\n  state.useDecoder = this._use(entity, obj);\n  assert(state.useDecoder._baseState.parent === null);\n  state.useDecoder = state.useDecoder._baseState.children[0];\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone();\n    state.useDecoder._baseState.implicit = state.implicit;\n  }\n  return state.useDecoder;\n};\n\nNode.prototype._decodeChoice = function decodeChoice(input, options) {\n  const state = this._baseState;\n  let result = null;\n  let match = false;\n\n  Object.keys(state.choice).some(function(key) {\n    const save = input.save();\n    const node = state.choice[key];\n    try {\n      const value = node._decode(input, options);\n      if (input.isError(value))\n        return false;\n\n      result = { type: key, value: value };\n      match = true;\n    } catch (e) {\n      input.restore(save);\n      return false;\n    }\n    return true;\n  }, this);\n\n  if (!match)\n    return input.error('Choice not matched');\n\n  return result;\n};\n\n//\n// Encoding\n//\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n  return new EncoderBuffer(data, this.reporter);\n};\n\nNode.prototype._encode = function encode(data, reporter, parent) {\n  const state = this._baseState;\n  if (state['default'] !== null && state['default'] === data)\n    return;\n\n  const result = this._encodeValue(data, reporter, parent);\n  if (result === undefined)\n    return;\n\n  if (this._skipDefault(result, reporter, parent))\n    return;\n\n  return result;\n};\n\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\n  const state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return state.children[0]._encode(data, reporter || new Reporter());\n\n  let result = null;\n\n  // Set reporter to share it with a child class\n  this.reporter = reporter;\n\n  // Check if data is there\n  if (state.optional && data === undefined) {\n    if (state['default'] !== null)\n      data = state['default'];\n    else\n      return;\n  }\n\n  // Encode children first\n  let content = null;\n  let primitive = false;\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data);\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter);\n  } else if (state.contains) {\n    content = this._getUse(state.contains, parent)._encode(data, reporter);\n    primitive = true;\n  } else if (state.children) {\n    content = state.children.map(function(child) {\n      if (child._baseState.tag === 'null_')\n        return child._encode(null, reporter, data);\n\n      if (child._baseState.key === null)\n        return reporter.error('Child should have a key');\n      const prevKey = reporter.enterKey(child._baseState.key);\n\n      if (typeof data !== 'object')\n        return reporter.error('Child expected, but input is not object');\n\n      const res = child._encode(data[child._baseState.key], reporter, data);\n      reporter.leaveKey(prevKey);\n\n      return res;\n    }, this).filter(function(child) {\n      return child;\n    });\n    content = this._createEncoderBuffer(content);\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      // TODO(indutny): this should be thrown on DSL level\n      if (!(state.args && state.args.length === 1))\n        return reporter.error('Too many args for : ' + state.tag);\n\n      if (!Array.isArray(data))\n        return reporter.error('seqof/setof, but data is not Array');\n\n      const child = this.clone();\n      child._baseState.implicit = null;\n      content = this._createEncoderBuffer(data.map(function(item) {\n        const state = this._baseState;\n\n        return this._getUse(state.args[0], data)._encode(item, reporter);\n      }, child));\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter);\n    } else {\n      content = this._encodePrimitive(state.tag, data);\n      primitive = true;\n    }\n  }\n\n  // Encode data itself\n  if (!state.any && state.choice === null) {\n    const tag = state.implicit !== null ? state.implicit : state.tag;\n    const cls = state.implicit === null ? 'universal' : 'context';\n\n    if (tag === null) {\n      if (state.use === null)\n        reporter.error('Tag could be omitted only for .use()');\n    } else {\n      if (state.use === null)\n        result = this._encodeComposite(tag, primitive, cls, content);\n    }\n  }\n\n  // Wrap in explicit\n  if (state.explicit !== null)\n    result = this._encodeComposite(state.explicit, false, 'context', result);\n\n  return result;\n};\n\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n  const state = this._baseState;\n\n  const node = state.choice[data.type];\n  if (!node) {\n    assert(\n      false,\n      data.type + ' not found in ' +\n            JSON.stringify(Object.keys(state.choice)));\n  }\n  return node._encode(data.value, reporter);\n};\n\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n  const state = this._baseState;\n\n  if (/str$/.test(tag))\n    return this._encodeStr(data, tag);\n  else if (tag === 'objid' && state.args)\n    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);\n  else if (tag === 'objid')\n    return this._encodeObjid(data, null, null);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._encodeTime(data, tag);\n  else if (tag === 'null_')\n    return this._encodeNull();\n  else if (tag === 'int' || tag === 'enum')\n    return this._encodeInt(data, state.args && state.reverseArgs[0]);\n  else if (tag === 'bool')\n    return this._encodeBool(data);\n  else if (tag === 'objDesc')\n    return this._encodeStr(data, tag);\n  else\n    throw new Error('Unsupported tag: ' + tag);\n};\n\nNode.prototype._isNumstr = function isNumstr(str) {\n  return /^[0-9 ]*$/.test(str);\n};\n\nNode.prototype._isPrintstr = function isPrintstr(str) {\n  return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str);\n};\n","'use strict';\n\nconst inherits = require('inherits');\n\nconst DEREncoder = require('./der');\n\nfunction PEMEncoder(entity) {\n  DEREncoder.call(this, entity);\n  this.enc = 'pem';\n}\ninherits(PEMEncoder, DEREncoder);\nmodule.exports = PEMEncoder;\n\nPEMEncoder.prototype.encode = function encode(data, options) {\n  const buf = DEREncoder.prototype.encode.call(this, data);\n\n  const p = buf.toString('base64');\n  const out = [ '-----BEGIN ' + options.label + '-----' ];\n  for (let i = 0; i < p.length; i += 64)\n    out.push(p.slice(i, i + 64));\n  out.push('-----END ' + options.label + '-----');\n  return out.join('\\n');\n};\n","'use strict';\n\n// Helper\nfunction reverse(map) {\n  const res = {};\n\n  Object.keys(map).forEach(function(key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key)\n      key = key | 0;\n\n    const value = map[key];\n    res[value] = key;\n  });\n\n  return res;\n}\n\nexports.tagClass = {\n  0: 'universal',\n  1: 'application',\n  2: 'context',\n  3: 'private'\n};\nexports.tagClassByName = reverse(exports.tagClass);\n\nexports.tag = {\n  0x00: 'end',\n  0x01: 'bool',\n  0x02: 'int',\n  0x03: 'bitstr',\n  0x04: 'octstr',\n  0x05: 'null_',\n  0x06: 'objid',\n  0x07: 'objDesc',\n  0x08: 'external',\n  0x09: 'real',\n  0x0a: 'enum',\n  0x0b: 'embed',\n  0x0c: 'utf8str',\n  0x0d: 'relativeOid',\n  0x10: 'seq',\n  0x11: 'set',\n  0x12: 'numstr',\n  0x13: 'printstr',\n  0x14: 't61str',\n  0x15: 'videostr',\n  0x16: 'ia5str',\n  0x17: 'utctime',\n  0x18: 'gentime',\n  0x19: 'graphstr',\n  0x1a: 'iso646str',\n  0x1b: 'genstr',\n  0x1c: 'unistr',\n  0x1d: 'charstr',\n  0x1e: 'bmpstr'\n};\nexports.tagByName = reverse(exports.tag);\n","'use strict';\n\nconst inherits = require('inherits');\nconst Buffer = require('safer-buffer').Buffer;\n\nconst DERDecoder = require('./der');\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n}\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  const lines = data.toString().split(/[\\r\\n]+/g);\n\n  const label = options.label.toUpperCase();\n\n  const re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  let start = -1;\n  let end = -1;\n  for (let i = 0; i < lines.length; i++) {\n    const match = lines[i].match(re);\n    if (match === null)\n      continue;\n\n    if (match[2] !== label)\n      continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN')\n        break;\n      start = i;\n    } else {\n      if (match[1] !== 'END')\n        break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1)\n    throw new Error('PEM section not found for: ' + label);\n\n  const base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9+/=]+/gi, '');\n\n  const input = Buffer.from(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};\n",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.1.0\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n      alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if less than two characters,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n              alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) {\r\n        t = xc;\r\n        xc = yc;\r\n        yc = t;\r\n        y.s = -y.s;\r\n      }  \r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) {\r\n        zc = xc;\r\n        xc = yc;\r\n        yc = zc;\r\n        i = xcL;\r\n        xcL = ycL;\r\n        ycL = i;\r\n      }  \r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) {\r\n        t = yc;\r\n        yc = xc;\r\n        xc = t;\r\n        b = a;\r\n      }  \r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '5e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) {\r\n          i = g1;\r\n          g1 = g2;\r\n          g2 = i;\r\n          len -= i;\r\n        }  \r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","'use strict';\n\nconst arrify = value => {\n\tif (value === null || value === undefined) {\n\t\treturn [];\n\t}\n\n\tif (Array.isArray(value)) {\n\t\treturn value;\n\t}\n\n\tif (typeof value === 'string') {\n\t\treturn [value];\n\t}\n\n\tif (typeof value[Symbol.iterator] === 'function') {\n\t\treturn [...value];\n\t}\n\n\treturn [value];\n};\n\nmodule.exports = arrify;\n","'use strict';\n\nconst inherits = require('inherits');\n\nconst bignum = require('bn.js');\nconst DecoderBuffer = require('../base/buffer').DecoderBuffer;\nconst Node = require('../base/node');\n\n// Import DER constants\nconst der = require('../constants/der');\n\nfunction DERDecoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n}\nmodule.exports = DERDecoder;\n\nDERDecoder.prototype.decode = function decode(data, options) {\n  if (!DecoderBuffer.isDecoderBuffer(data)) {\n    data = new DecoderBuffer(data, options);\n  }\n\n  return this.tree._decode(data, options);\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  Node.call(this, 'der', parent);\n}\ninherits(DERNode, Node);\n\nDERNode.prototype._peekTag = function peekTag(buffer, tag, any) {\n  if (buffer.isEmpty())\n    return false;\n\n  const state = buffer.save();\n  const decodedTag = derDecodeTag(buffer, 'Failed to peek tag: \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  buffer.restore(state);\n\n  return decodedTag.tag === tag || decodedTag.tagStr === tag ||\n    (decodedTag.tagStr + 'of') === tag || any;\n};\n\nDERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {\n  const decodedTag = derDecodeTag(buffer,\n    'Failed to decode tag of \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  let len = derDecodeLen(buffer,\n    decodedTag.primitive,\n    'Failed to get length of \"' + tag + '\"');\n\n  // Failure\n  if (buffer.isError(len))\n    return len;\n\n  if (!any &&\n      decodedTag.tag !== tag &&\n      decodedTag.tagStr !== tag &&\n      decodedTag.tagStr + 'of' !== tag) {\n    return buffer.error('Failed to match tag: \"' + tag + '\"');\n  }\n\n  if (decodedTag.primitive || len !== null)\n    return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n\n  // Indefinite length... find END tag\n  const state = buffer.save();\n  const res = this._skipUntilEnd(\n    buffer,\n    'Failed to skip indefinite length body: \"' + this.tag + '\"');\n  if (buffer.isError(res))\n    return res;\n\n  len = buffer.offset - state.offset;\n  buffer.restore(state);\n  return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n};\n\nDERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {\n  for (;;) {\n    const tag = derDecodeTag(buffer, fail);\n    if (buffer.isError(tag))\n      return tag;\n    const len = derDecodeLen(buffer, tag.primitive, fail);\n    if (buffer.isError(len))\n      return len;\n\n    let res;\n    if (tag.primitive || len !== null)\n      res = buffer.skip(len);\n    else\n      res = this._skipUntilEnd(buffer, fail);\n\n    // Failure\n    if (buffer.isError(res))\n      return res;\n\n    if (tag.tagStr === 'end')\n      break;\n  }\n};\n\nDERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,\n  options) {\n  const result = [];\n  while (!buffer.isEmpty()) {\n    const possibleEnd = this._peekTag(buffer, 'end');\n    if (buffer.isError(possibleEnd))\n      return possibleEnd;\n\n    const res = decoder.decode(buffer, 'der', options);\n    if (buffer.isError(res) && possibleEnd)\n      break;\n    result.push(res);\n  }\n  return result;\n};\n\nDERNode.prototype._decodeStr = function decodeStr(buffer, tag) {\n  if (tag === 'bitstr') {\n    const unused = buffer.readUInt8();\n    if (buffer.isError(unused))\n      return unused;\n    return { unused: unused, data: buffer.raw() };\n  } else if (tag === 'bmpstr') {\n    const raw = buffer.raw();\n    if (raw.length % 2 === 1)\n      return buffer.error('Decoding of string type: bmpstr length mismatch');\n\n    let str = '';\n    for (let i = 0; i < raw.length / 2; i++) {\n      str += String.fromCharCode(raw.readUInt16BE(i * 2));\n    }\n    return str;\n  } else if (tag === 'numstr') {\n    const numstr = buffer.raw().toString('ascii');\n    if (!this._isNumstr(numstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'numstr unsupported characters');\n    }\n    return numstr;\n  } else if (tag === 'octstr') {\n    return buffer.raw();\n  } else if (tag === 'objDesc') {\n    return buffer.raw();\n  } else if (tag === 'printstr') {\n    const printstr = buffer.raw().toString('ascii');\n    if (!this._isPrintstr(printstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'printstr unsupported characters');\n    }\n    return printstr;\n  } else if (/str$/.test(tag)) {\n    return buffer.raw().toString();\n  } else {\n    return buffer.error('Decoding of string type: ' + tag + ' unsupported');\n  }\n};\n\nDERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {\n  let result;\n  const identifiers = [];\n  let ident = 0;\n  let subident = 0;\n  while (!buffer.isEmpty()) {\n    subident = buffer.readUInt8();\n    ident <<= 7;\n    ident |= subident & 0x7f;\n    if ((subident & 0x80) === 0) {\n      identifiers.push(ident);\n      ident = 0;\n    }\n  }\n  if (subident & 0x80)\n    identifiers.push(ident);\n\n  const first = (identifiers[0] / 40) | 0;\n  const second = identifiers[0] % 40;\n\n  if (relative)\n    result = identifiers;\n  else\n    result = [first, second].concat(identifiers.slice(1));\n\n  if (values) {\n    let tmp = values[result.join(' ')];\n    if (tmp === undefined)\n      tmp = values[result.join('.')];\n    if (tmp !== undefined)\n      result = tmp;\n  }\n\n  return result;\n};\n\nDERNode.prototype._decodeTime = function decodeTime(buffer, tag) {\n  const str = buffer.raw().toString();\n\n  let year;\n  let mon;\n  let day;\n  let hour;\n  let min;\n  let sec;\n  if (tag === 'gentime') {\n    year = str.slice(0, 4) | 0;\n    mon = str.slice(4, 6) | 0;\n    day = str.slice(6, 8) | 0;\n    hour = str.slice(8, 10) | 0;\n    min = str.slice(10, 12) | 0;\n    sec = str.slice(12, 14) | 0;\n  } else if (tag === 'utctime') {\n    year = str.slice(0, 2) | 0;\n    mon = str.slice(2, 4) | 0;\n    day = str.slice(4, 6) | 0;\n    hour = str.slice(6, 8) | 0;\n    min = str.slice(8, 10) | 0;\n    sec = str.slice(10, 12) | 0;\n    if (year < 70)\n      year = 2000 + year;\n    else\n      year = 1900 + year;\n  } else {\n    return buffer.error('Decoding ' + tag + ' time is not supported yet');\n  }\n\n  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);\n};\n\nDERNode.prototype._decodeNull = function decodeNull() {\n  return null;\n};\n\nDERNode.prototype._decodeBool = function decodeBool(buffer) {\n  const res = buffer.readUInt8();\n  if (buffer.isError(res))\n    return res;\n  else\n    return res !== 0;\n};\n\nDERNode.prototype._decodeInt = function decodeInt(buffer, values) {\n  // Bigint, return as it is (assume big endian)\n  const raw = buffer.raw();\n  let res = new bignum(raw);\n\n  if (values)\n    res = values[res.toString(10)] || res;\n\n  return res;\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getDecoder('der').tree;\n};\n\n// Utility methods\n\nfunction derDecodeTag(buf, fail) {\n  let tag = buf.readUInt8(fail);\n  if (buf.isError(tag))\n    return tag;\n\n  const cls = der.tagClass[tag >> 6];\n  const primitive = (tag & 0x20) === 0;\n\n  // Multi-octet tag - load\n  if ((tag & 0x1f) === 0x1f) {\n    let oct = tag;\n    tag = 0;\n    while ((oct & 0x80) === 0x80) {\n      oct = buf.readUInt8(fail);\n      if (buf.isError(oct))\n        return oct;\n\n      tag <<= 7;\n      tag |= oct & 0x7f;\n    }\n  } else {\n    tag &= 0x1f;\n  }\n  const tagStr = der.tag[tag];\n\n  return {\n    cls: cls,\n    primitive: primitive,\n    tag: tag,\n    tagStr: tagStr\n  };\n}\n\nfunction derDecodeLen(buf, primitive, fail) {\n  let len = buf.readUInt8(fail);\n  if (buf.isError(len))\n    return len;\n\n  // Indefinite form\n  if (!primitive && len === 0x80)\n    return null;\n\n  // Definite form\n  if ((len & 0x80) === 0) {\n    // Short form\n    return len;\n  }\n\n  // Long form\n  const num = len & 0x7f;\n  if (num > 4)\n    return buf.error('length octect is too long');\n\n  len = 0;\n  for (let i = 0; i < num; i++) {\n    len <<= 8;\n    const j = buf.readUInt8(fail);\n    if (buf.isError(j))\n      return j;\n    len |= j;\n  }\n\n  return len;\n}\n","'use strict';\n\nconst inherits = require('inherits');\n\nfunction Reporter(options) {\n  this._reporterState = {\n    obj: null,\n    path: [],\n    options: options || {},\n    errors: []\n  };\n}\nexports.Reporter = Reporter;\n\nReporter.prototype.isError = function isError(obj) {\n  return obj instanceof ReporterError;\n};\n\nReporter.prototype.save = function save() {\n  const state = this._reporterState;\n\n  return { obj: state.obj, pathLen: state.path.length };\n};\n\nReporter.prototype.restore = function restore(data) {\n  const state = this._reporterState;\n\n  state.obj = data.obj;\n  state.path = state.path.slice(0, data.pathLen);\n};\n\nReporter.prototype.enterKey = function enterKey(key) {\n  return this._reporterState.path.push(key);\n};\n\nReporter.prototype.exitKey = function exitKey(index) {\n  const state = this._reporterState;\n\n  state.path = state.path.slice(0, index - 1);\n};\n\nReporter.prototype.leaveKey = function leaveKey(index, key, value) {\n  const state = this._reporterState;\n\n  this.exitKey(index);\n  if (state.obj !== null)\n    state.obj[key] = value;\n};\n\nReporter.prototype.path = function path() {\n  return this._reporterState.path.join('/');\n};\n\nReporter.prototype.enterObject = function enterObject() {\n  const state = this._reporterState;\n\n  const prev = state.obj;\n  state.obj = {};\n  return prev;\n};\n\nReporter.prototype.leaveObject = function leaveObject(prev) {\n  const state = this._reporterState;\n\n  const now = state.obj;\n  state.obj = prev;\n  return now;\n};\n\nReporter.prototype.error = function error(msg) {\n  let err;\n  const state = this._reporterState;\n\n  const inherited = msg instanceof ReporterError;\n  if (inherited) {\n    err = msg;\n  } else {\n    err = new ReporterError(state.path.map(function(elem) {\n      return '[' + JSON.stringify(elem) + ']';\n    }).join(''), msg.message || msg, msg.stack);\n  }\n\n  if (!state.options.partial)\n    throw err;\n\n  if (!inherited)\n    state.errors.push(err);\n\n  return err;\n};\n\nReporter.prototype.wrapResult = function wrapResult(result) {\n  const state = this._reporterState;\n  if (!state.options.partial)\n    return result;\n\n  return {\n    result: this.isError(result) ? null : result,\n    errors: state.errors\n  };\n};\n\nfunction ReporterError(path, msg) {\n  this.path = path;\n  this.rethrow(msg);\n}\ninherits(ReporterError, Error);\n\nReporterError.prototype.rethrow = function rethrow(msg) {\n  this.message = msg + ' at: ' + (this.path || '(shallow)');\n  if (Error.captureStackTrace)\n    Error.captureStackTrace(this, ReporterError);\n\n  if (!this.stack) {\n    try {\n      // IE only adds stack when thrown\n      throw new Error(this.message);\n    } catch (e) {\n      this.stack = e.stack;\n    }\n  }\n  return this;\n};\n","'use strict';\n\nconst encoders = require('./encoders');\nconst decoders = require('./decoders');\nconst inherits = require('inherits');\n\nconst api = exports;\n\napi.define = function define(name, body) {\n  return new Entity(name, body);\n};\n\nfunction Entity(name, body) {\n  this.name = name;\n  this.body = body;\n\n  this.decoders = {};\n  this.encoders = {};\n}\n\nEntity.prototype._createNamed = function createNamed(Base) {\n  const name = this.name;\n\n  function Generated(entity) {\n    this._initNamed(entity, name);\n  }\n  inherits(Generated, Base);\n  Generated.prototype._initNamed = function _initNamed(entity, name) {\n    Base.call(this, entity, name);\n  };\n\n  return new Generated(this);\n};\n\nEntity.prototype._getDecoder = function _getDecoder(enc) {\n  enc = enc || 'der';\n  // Lazily create decoder\n  if (!this.decoders.hasOwnProperty(enc))\n    this.decoders[enc] = this._createNamed(decoders[enc]);\n  return this.decoders[enc];\n};\n\nEntity.prototype.decode = function decode(data, enc, options) {\n  return this._getDecoder(enc).decode(data, options);\n};\n\nEntity.prototype._getEncoder = function _getEncoder(enc) {\n  enc = enc || 'der';\n  // Lazily create encoder\n  if (!this.encoders.hasOwnProperty(enc))\n    this.encoders[enc] = this._createNamed(encoders[enc]);\n  return this.encoders[enc];\n};\n\nEntity.prototype.encode = function encode(data, enc, /* internal */ reporter) {\n  return this._getEncoder(enc).encode(data, reporter);\n};\n","'use strict';\n\nvar objectAssign = require('object-assign');\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\n// Expose a strict only variant of assert\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n"],"sourceRoot":""}